#!/bin/bash
#+
# Use this script to trigger a build on a Jenkins server for the working branch.
#-

source scripts/mistify-functions.sh

jenkinsdefault=$(get_build_default jenkins http://mistify-dev-2.office.omniti.com:8081)
jenkinsjobdefault=$(get_build_default jenkinsjob MistifyOS-remote)

mistifybranch=`git status | grep "On branch" | cut -f 3 -d ' '`

usage () {
    cat << EOF
Usage: $0 [options] [-- joboptions]
  Use this script to remotely trigger a Mistify build on a Jenkins CI server.
  The Jenkins CI server must be configured to run the buildmistify script on the
  server in order to build.
  Options:
    ==== remote build ====
    --jenkins <URL>
        The Jenkins CI server URL. The URL is saved in the file
        $statedir/jenkins.
        [jenkins=$jenkinsdefault]
    --job <JOB>
        The job to execute. This must match a name in the Jenkins job list. This
        is saved in the file: $statedir/jenkinsjob
        [job=$jenkinsjobdefault]
        Parameters passed to the Jenkins server:
        [branch=$mistifybranch]
    ==== other ====
    --dryrun
        Just testing what will happen with this script. Don't run the Buildroot
        make.
    -h|--help
        Display this usage.

  NOTE: This script maintains state in $statedir.
EOF
}

#+
# Handle the command line options.
#-
a=`getopt -l "\
jenkins:,\
job:,\
dryrun,\
help" \
   -o "h" -- "$@"`

if [ $? -gt 0 ]; then
    usage
    exit 1
fi

eval set -- $a

while [ $# -ge 1 ]; do
    case "$1" in
	--)
	    shift
	    options=$*
	    break
	    ;;
	--jenkins)
	    jenkins=$2
	    shift
	    ;;
	--job)
	    jenkinsjob=$2
	    shift
	    ;;
	--dryrun)
	    dryrun=echo
	    ;;
	-h|--help)
	    usage
	    exit 0
	    ;;
	# using getopt should avoid needing this catchall but just in case...
	*)
	    error "Invalid option: $1"
	    usage
	    exit 1
	    ;;
    esac
    shift
done

if [ -z "$jenkins" ]; then
    jenkins=$jenkinsdefault
fi

if [ -z "$jenkinsjob" ]; then
    jenkinsjob=$jenkinsjobdefault
fi

if [ -n "$options" ]; then
  message "Options are: $options"
  params="&options="
  params+=`echo $options | sed 's/ /%20/g'`
  message "Adding Jenkins parameters: $params"
fi

jenkinscommand="wget -O /dev/null $jenkins/job/$jenkinsjob/buildWithParameters?token=buildmistify&branch=$mistifybranch$params"

if [ -n "$dryrun" ]; then
  message "Just a test run -- not building."
else
  set_build_default jenkins $jenkins
  set_build_default jenkinsjob $jenkinsjob
fi

message "Triggering a remote build on Jenkins server: $jenkins"
message "The branch is: $mistifybranch"
$dryrun $jenkinscommand
if [ $? -gt 0 ]; then
  error The Jenkins server is not running at the URL or did not accept the job.
  exit 1
fi
