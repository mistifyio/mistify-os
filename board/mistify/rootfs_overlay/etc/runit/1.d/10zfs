#!/bin/bash
modprobe spl
modprobe zfs

cd /tmp

sleep 5

zpool import -f mistify > /dev/null 2>&1 || echo "Mistify zpool is not present"

zpool list mistify > /dev/null 2>&1

if [ $? -ne 0 ]; then

    ZFS=""
    read -r cmdline < /proc/cmdline
    for param in $cmdline ; do
        case $param in
            zfs=*)
                ZFS=${param#zfs=}
                ;;
        esac
    done

    DISKLIST=`lsblk --ascii --noheadings --output type,name,size,model --nodeps | grep ^disk`
    DISKS=`echo "$DISKLIST" | awk '{print "/dev/"$2}'`

    ANSWER=n
    if [ "$ZFS" = "auto" ]; then
        ANSWER=y
    else
        echo "No zpool detected."
        echo "enter y and a zpool will be created using all disks."
        echo "enter any other input to drop to a shell to setup manually"
        echo "DISKS:"
        echo "$DISKLIST"
        echo
        echo -n "input: "
        read ANSWER
    fi

    if [ "$ANSWER" == "y" ]; then
        TYPE=raidz
        read -a ARRAY <<< "$DISKS"

        if [ ${#ARRAY[@]} -eq 1 ]; then
            TYPE=""
        fi

        zpool create -f \
		      -o cachefile=none \
		      mistify $TYPE $DISKS

        if [ $? -ne 0 ]; then
            exit -4
        fi
	    udevadm settle
    else
        # TODO: we could allow bootflags that will set it up for us
        # possibly using certain options
        echo "You need to create a zpool named mistify"
        echo "Reboot after setting it up"
        exit -1
    fi
fi

# Pause until the mistify zpool is imported and mounted
while [ ! -d /mistify ]; do
	sleep 1
done


COMPRESSION=$(zfs get compression -Ho value mistify)
if [ "$COMPRESSION" = "off" ]; then
    zfs set compression=lz4 mistify
fi

# Create base zfs filesystems and set their properies
for D in private images guests; do
    zfs list mistify/$D  > /dev/null 2>&1 || zfs create mistify/$D
done

zfs mount -a

QUOTA=$(zfs get quota -Ho value mistify/private)
if [ "$QUOTA" = "none" ]; then
    zfs set quota=4G mistify/private
fi

exit -1

