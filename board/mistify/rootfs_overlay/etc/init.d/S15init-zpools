#!/bin/bash
cd /tmp

sleep 5

ZPOOL=mistify

zpool import -f $ZPOOL > /dev/null 2>&1 || echo "Mistify zpool is not present"

zpool list $ZPOOL > /dev/null 2>&1

if [ $? -ne 0 ]; then
    DISKLIST=`lsblk --ascii --noheadings --output type,name,size,model --nodeps | grep ^disk`
    DISKS=`echo "$DISKLIST" | awk '{print "/dev/"$2}'`

    echo "No $ZPOOL zpool detected."
    echo "enter y and a zpool will be created using all disks."
    echo "enter any other input to drop to a shell to setup manually"
    echo "DISKS:"
    echo "$DISKLIST"
    echo
    echo -n "input: "
    read ANSWER

    if [ "$ANSWER" == "y" ]; then
        TYPE=raidz
        read -a ARRAY <<< "$DISKS"

        if [ ${#ARRAY[@]} -eq 1 ]; then
            TYPE=""
        fi

        zpool create -f \
		-o cachefile=none \
		$ZPOOL $TYPE $DISKS

        if [ $? -ne 0 ]; then
            exit -4
        fi
	/sbin/udevadm settle
    else
        # TODO: we could allow bootflags that will set it up for us
        # possibly using certain options
        echo "You need to create a zpool named mistify"
        echo "Reboot after setting it up"
        # the init wrapper will exec bash for us
        exit -3
    fi
fi

# Pause until the mistify zpool is imported and mounted
while [ ! -d /$ZPOOL ]
do
	sleep 2
done

# Create base zfs filesystems and set their properies
for D in private images guests; do
    zfs list $ZPOOL/$D > /dev/null 2>&1 || zfs create $ZPOOL/$D
done

COMPRESSION=$(zfs get compression -Ho value mistify)
if [ "$COMPRESSION" = "off" ]; then
    zfs set compression=lz4 $ZPOOL
fi

QUOTA=$(zfs get quota -Ho value $ZPOOL/private)
if [ "$QUOTA" = "none" ]; then
    zfs set quota=4G $ZPOOL/private
fi
