#!/bin/bash
cd /tmp

sleep 5

zpool import -f mistify > /dev/null 2>&1 || echo "Mistify zpool is not present"

zpool list mistify > /dev/null 2>&1

if [ $? -ne 0 ]; then
    DISKINFO=`parted -lm`
    DISKLIST=$(for d in `echo "$DISKINFO" | grep /dev/ | cut -d ':' -f 1`; do
        VENDORID=`echo "$DISKINFO" | grep $d | cut -d ':' -f 7 | awk '{print $1}'`
        PRODUCTID=`echo "$DISKINFO" | grep $d | cut -d ':' -f 7 | awk '{print $2}'`
        DSIZE=`echo "$DISKINFO" | grep $d | cut -d ':' -f 2`
        printf "%s\t%s\t%s %s\n" $d $DSIZE $VENDORID $PRODUCTID
done)

    ZPOOLCANDIDATES=`echo "$DISKLIST" | awk '{print $1}'`
    # Don't use the boot drive.
    for D in $ZPOOLCANDIDATES; do
	if sfdisk -l $D | grep "\*"; then
	    echo "Excluding boot drive $D."
	    continue
	else
	    DISKS="$DISKS $D"
	fi
    done
    
    echo "No zpool detected."
    echo "enter y and a zpool will be created using all disks."
    echo "enter any other input to drop to a shell to setup manually"
    echo "DISKS:"
    echo "$DISKLIST"
    echo "WARNING: This will erase the following drives: $DISKS"
    echo -n "input: "
    read ANSWER

    if [ "$ANSWER" == "y" ]; then
        TYPE=raidz
        read -a ARRAY <<< "$DISKS"

        if [ ${#ARRAY[@]} -eq 1 ]; then
            TYPE=""
        fi

        # Be sure the drives are starting fresh.
        for D in $DISKS; do
	    echo "Cleaning $D..."
	    dd if=/dev/zero of=$D bs=1M >/dev/null
        done
        
        zpool create -f \
		-o cachefile=none \
		mistify $TYPE $DISKS

        if [ $? -ne 0 ]; then
            exit -4
        fi
	/sbin/udevadm settle
    else
        # TODO: we could allow bootflags that will set it up for us
        # possibly using certain options
        echo "You need to create a zpool named mistify"
        echo "Reboot after setting it up"
        # the init wrapper will exec bash for us
        exit -3
    fi
fi

# Pause until the mistify zpool is imported and mounted
while [ ! -d /mistify ]
do
	sleep 2
done

# Create base zfs filesystems and set their properies
for D in private images guests; do
    zfs list mistify/$D > /dev/null 2>&1 || zfs create mistify/$D
done

COMPRESSION=$(zfs get compression -Ho value mistify)
if [ "$COMPRESSION" = "off" ]; then
    zfs set compression=lz4 mistify
fi

QUOTA=$(zfs get quota -Ho value mistify/private)
if [ "$QUOTA" = "none" ]; then
    zfs set quota=4G mistify/private
fi
